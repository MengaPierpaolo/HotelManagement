/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hung_RoomType;

import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class RoomTypeDialog extends javax.swing.JDialog {

    /**
     * Creates new form RoomTypeDialog
     */
    private int roomTypeID = -1;
    private String roomTypeName;
    private double roomTypeRate;
    private String roomTypeNote;
    RoomTypeEntity roomTypeEntity;
    RoomTypeDAO roomTypeDAO;
    RoomType roomType;
//    public RoomTypeDialog(java.awt.Frame parent, boolean modal, RoomTypeEntity roomTypeEntity) {
//        super(parent, modal);
//        initComponents();
//        this.roomTypeEntity = roomTypeEntity;
//    }
    public RoomTypeDialog(java.awt.Frame parent, boolean modal, RoomType roomType) {
        super(parent, modal);
        initComponents();
        roomTypeDAO = new RoomTypeDAO();
        this.roomType = roomType;
    }
//    public RoomTypeDialog(java.awt.Frame parent, boolean modal) {
//        super(parent, modal);
//        initComponents();
//    }
    
    private void getTextFromField() {
        checkNull();
        
        this.roomTypeName = txtRoomTypeName.getText();
        this.roomTypeRate = Double.parseDouble(txtRoomTypeRate.getText());
        this.roomTypeNote = txaRoomTypeNote.getText();
    }
    
    private void setFiedFromEntity() {
        labelID.setText(String.valueOf(roomTypeEntity.getRoomTypeID()));
        txtRoomTypeName.setText(this.roomTypeEntity.getRoomTypeName());
        txtRoomTypeRate.setText(String.valueOf(this.roomTypeEntity.getRoomTypeRate()));
        txaRoomTypeNote.setText(this.roomTypeEntity.getRoomTypeNote());
    }
    
    private boolean isNumber(String str) {
        return str.matches("[0-9]+");
    }
    
    private void checkNull() {
        while(txtRoomTypeName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Name can not be blank");
            txtRoomTypeName.grabFocus();
            return;
        }
        while(txtRoomTypeRate.getText().isEmpty() || isNumber(txtRoomTypeRate.getText()) == false ) {
            JOptionPane.showMessageDialog(this, "Rate can not be blank and only number");
            txtRoomTypeRate.grabFocus();
            return;
        }
        while(txaRoomTypeNote.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Note can not be blank");
            txaRoomTypeNote.grabFocus();
            return;
        }
        JOptionPane.showMessageDialog(this, "all good");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRoomTypeName = new javax.swing.JTextField();
        txtRoomTypeRate = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaRoomTypeNote = new javax.swing.JTextArea();
        btnApply = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        labelID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Room Type");

        jLabel2.setText("Name");

        jLabel3.setText("Rate: ");

        jLabel4.setText("Note");

        txtRoomTypeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomTypeNameActionPerformed(evt);
            }
        });

        txaRoomTypeNote.setColumns(20);
        txaRoomTypeNote.setRows(5);
        jScrollPane1.setViewportView(txaRoomTypeNote);

        btnApply.setText("Apply");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        jButton2.setText("Reset");

        jButton3.setText("Cancel");

        labelID.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btnApply)
                        .addGap(50, 50, 50)
                        .addComponent(jButton2)
                        .addGap(42, 42, 42)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(jLabel1)
                                .addGap(44, 44, 44))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtRoomTypeName)
                                            .addComponent(jScrollPane1)
                                            .addComponent(txtRoomTypeRate)))
                                    .addComponent(jSeparator2))))
                        .addComponent(labelID, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(labelID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRoomTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRoomTypeRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApply)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRoomTypeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomTypeNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomTypeNameActionPerformed

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        // TODO add your handling code here:
        getTextFromField();

        RoomTypeEntity roomTypeToAdd = new RoomTypeEntity(roomTypeID, roomTypeName, roomTypeRate, roomTypeNote);
        roomTypeDAO.insert(roomTypeToAdd);
        this.setVisible(false);
        roomType.showData();
    }//GEN-LAST:event_btnApplyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomTypeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomTypeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomTypeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomTypeDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RoomTypeDialog dialog = new RoomTypeDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApply;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelID;
    private javax.swing.JTextArea txaRoomTypeNote;
    private javax.swing.JTextField txtRoomTypeName;
    private javax.swing.JTextField txtRoomTypeRate;
    // End of variables declaration//GEN-END:variables
}
