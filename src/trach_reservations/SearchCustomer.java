/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trach_reservations;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import projectinterface.CentralInterface;
import vu_guest.CustomerEnity;
import java.util.Date;

/**
 *
 * @author Administrator
 */
public class SearchCustomer extends javax.swing.JDialog implements CentralInterface{

    DefaultTableModel cusModel;
    DbConnect db;
    Statement st;
    Connection con;
    ResultSet rs;
    String sql;
    Vector rHeader, rData, row;
    Vector customers, send; 
    CustomerEnity cusObj;
    String cusid, cusname, phone, email, identifier,  gender,company,adrress,status;
    Date dob;
    HashMap<String, Vector> result;

    ///khai bao
    ReservationDialog p;
    public SearchCustomer(java.awt.Frame parent, boolean modal, ReservationDialog p) {
        super(parent, modal);
        initComponents();
        this.p = p;
        
        tblCus.getTableHeader().setPreferredSize(new Dimension(1200, 20));
        setTitle("Search Customer");
        db= new DbConnect("sa", "root");
        db.createConnect();
        con = db.getCon();
        st = db.getStsm();
        rHeader = new Vector();
        rData = new Vector();
        rHeader.add("Customer ID");
        rHeader.add("Personal Identifier");
        rHeader.add("DOB");
        rHeader.add("Customer Name");
        rHeader.add("Gender");
        rHeader.add("Company");
        rHeader.add("Address");
        rHeader.add("Status");
        rHeader.add("Phone");
        rHeader.add("Email");
        cusModel = new DefaultTableModel(rData,rHeader){
            @Override
            public boolean isCellEditable(int rows,int column){
                return false;
            }
            
        };
        showData();
        formDisplayCentral();
             
    }
      @Override
    public void formDisplayCentral() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int w = this.getSize().width;
        int h = this.getSize().height;
        //setSize(screenSize.width,screenSize.height);
        if(this.getSize().width!= screenSize.width && this.getSize().height!=screenSize.height)
        setLocation((screenSize.width-w)/2, (screenSize.height-h)/2);
    }

    @Override
    public boolean checkEmptyField() {
        return false;
    }

    @Override
    public void showData() {
        try {
            sql = "select * from customer";
            rs = st.executeQuery(sql);
            
            while(rs.next()){
                row = new Vector();
                row.add(rs.getInt(1));
                row.add(rs.getString(2));
                row.add(rs.getDate(3));
                row.add(rs.getString(4));
                row.add(rs.getString(5));
                row.add(rs.getString(6));
                row.add(rs.getString(7));
                row.add(rs.getString(8));
                row.add(rs.getString(9));
                row.add(rs.getString(10));
                //rData.add(row);
                cusModel.addRow(row);
            }
            
            tblCus.setModel(cusModel);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtIden = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCus = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        jLabel1.setText("Name");

        txtName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtNameCaretUpdate(evt);
            }
        });
        txtName.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtNameInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        txtIden.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtIdenCaretUpdate(evt);
            }
        });

        jLabel2.setText("Identifier");

        txtPhone.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtPhoneCaretUpdate(evt);
            }
        });

        jLabel3.setText("Phone Number");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIden, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon24/ok24.png"))); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon24/cancel24.png"))); // NOI18N
        jButton2.setText("Cancel");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon24/Iconic_26d4(0)_24.png"))); // NOI18N
        jButton3.setText("Reset");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(500, 700));

        tblCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCus.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblCus.setMaximumSize(new java.awt.Dimension(2147483647, 1000));
        tblCus.setOpaque(false);
        tblCus.setPreferredSize(new java.awt.Dimension(1200, 100));
        tblCus.setTableHeader(tblCus.getTableHeader());
        tblCus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCusMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCus);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtNameInputMethodTextChanged
           
        
    }//GEN-LAST:event_txtNameInputMethodTextChanged

    private void txtNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtNameCaretUpdate
        cusModel.getDataVector().clear();
        showData();
        Vector obj =  cusModel.getDataVector();
        result = new HashMap<>();
        int i =1;
        for (Object customer : obj) {
            //System.out.println(customer.toString());
            Vector cus = (Vector) customer;
            result.put(cus.get(3).toString()+i, cus);
            i++;
        }
        Set object = result.keySet();
        
            //System.out.println(object.toString());
        // basic testing code to get started
        String word = txtName.getText();
        // Pass NearbyWords any Dictionary implementation you prefer

        Iterator words = object.iterator();
        Vector sub = new Vector();
        while (words.hasNext()) {
            Object next = words.next();
            if(next.toString().toLowerCase().contains(word)){
                sub.add(next);
            }
            //d.addWord(next.toString());
        }
        //System.err.println(result.get("Lai Van Trach").toString());
        cusModel.getDataVector().clear();
        if(!sub.isEmpty()){
            for (Object ob : sub) {
                cusModel.addRow(result.get(ob.toString()));
            }
        }
        tblCus.setModel(cusModel);
        repaint();
        //System.out.println("Spelling Suggestions for \""+word+"\" are:");
        //System.out.println(suggest);
    }//GEN-LAST:event_txtNameCaretUpdate

    private void txtIdenCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtIdenCaretUpdate
        cusModel.getDataVector().clear();
        showData();
        Vector obj =  cusModel.getDataVector();
        result = new HashMap<>();
        int i = 1;
        for (Object customer : obj) {
            //System.out.println(customer.toString());
            Vector cus = (Vector) customer;
            result.put(cus.get(1).toString()+i, cus);
            i++;
        }
        Set object = result.keySet();
        
            //System.out.println(object.toString());
        // basic testing code to get started
        String word = txtIden.getText();
        // Pass NearbyWords any Dictionary implementation you prefer

        Iterator words = object.iterator();
        Vector sub = new Vector();
        while (words.hasNext()) {
            Object next = words.next();
            if(next.toString().contains(word)){
                sub.add(next);
            }
            //d.addWord(next.toString());
        }
        //System.err.println(result.get("Lai Van Trach").toString());
        cusModel.getDataVector().clear();
        if(!sub.isEmpty()){
            for (Object ob : sub) {
                cusModel.addRow(result.get(ob.toString()));
            }
        }
        tblCus.setModel(cusModel);
        repaint();
        //System.out.println("Spelling Suggestions for \""+word+"\" are:");
        //System.out.println(suggest);
    }//GEN-LAST:event_txtIdenCaretUpdate

    private void txtPhoneCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtPhoneCaretUpdate
        cusModel.getDataVector().clear();
        showData();
        Vector obj =  cusModel.getDataVector();
        result = new HashMap<>();
        int i =1;
        for (Object customer : obj) {
            //System.out.println(customer.toString());
            Vector cus = (Vector) customer;
            result.put(cus.get(8).toString()+i, cus);
            i++;
        }
        Set object = result.keySet();
        
            //System.out.println(object.toString());
        // basic testing code to get started
        String word = txtPhone.getText();
        // Pass NearbyWords any Dictionary implementation you prefer

        Iterator words = object.iterator();
        Vector sub = new Vector();
        while (words.hasNext()) {
            Object next = words.next();
            if(next.toString().toLowerCase().contains(word)){
                sub.add(next);
            }
            //d.addWord(next.toString());
        }
        //System.err.println(result.get("Lai Van Trach").toString());
        cusModel.getDataVector().clear();
        if(!sub.isEmpty()){
            for (Object ob : sub) {
                cusModel.addRow(result.get(ob.toString()));
            }
        }
        tblCus.setModel(cusModel);
        repaint();
        //System.out.println("Spelling Suggestions for \""+word+"\" are:");
        //System.out.println(suggest);
    }//GEN-LAST:event_txtPhoneCaretUpdate

    private void tblCusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCusMouseClicked

            int row = tblCus.getSelectedRow();
            if(row==-1){
                JOptionPane.showMessageDialog(this, "No row selected");
                return;
            }
            cusid = String.valueOf(tblCus.getValueAt(row, 0));
            cusname = (String) tblCus.getValueAt(row, 3);
            dob = (Date)tblCus.getValueAt(row, 2);
            //java.sql.Date sqlDate = new java.sql.Date(formatter.parse(dob).getTime());
            gender =(String) tblCus.getValueAt(row, 4);
            company =(String) tblCus.getValueAt(row, 5);
            adrress =(String) tblCus.getValueAt(row, 6);
            status =(String) tblCus.getValueAt(row, 7);
            phone = (String) tblCus.getValueAt(row, 8);
            identifier = (String) tblCus.getValueAt(row, 1);
            email = (String) tblCus.getValueAt(row, 9);
            cusObj = new CustomerEnity(identifier, cusname, gender, company, adrress, phone, email, status, dob, Integer.parseInt(cusid));
        
    }//GEN-LAST:event_tblCusMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(cusObj==null){
            return;
        }
        p.setCustomerFiled(cusObj);
        setVisible(false);
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SearchCustomer dialog = new SearchCustomer(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCus;
    private javax.swing.JTextField txtIden;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables

  
}
